DROP TABLE IF EXISTS "compilation" CASCADE;
DROP TABLE IF EXISTS "request" CASCADE;
DROP TABLE IF EXISTS "event" CASCADE;
DROP TABLE IF EXISTS "location" CASCADE;
DROP TABLE IF EXISTS "category" CASCADE;
DROP TABLE IF EXISTS "users" CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar(250) NOT NULL,
    email varchar(254) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar(50) NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS location (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat float NOT NULL,
    lon float NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id),
    CONSTRAINT UQ_LAT_LON UNIQUE (lat, lon)
);

CREATE TABLE IF NOT EXISTS event (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title varchar(120) NOT NULL,
    annotation varchar(2000) NOT NULL,
    description varchar(7000) NOT NULL,
    category_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    location_id BIGINT NOT NULL,
    created_on timestamp NOT NULL,
    published_on timestamp,
    event_date timestamp NOT NULL,
    paid boolean,
    participant_limit INT,
    request_moderation boolean,
    state varchar(20) NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT fk_events_to_users FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_events_to_category FOREIGN KEY (category_id) REFERENCES category(id),
    CONSTRAINT fk_events_to_location FOREIGN KEY (location_id) REFERENCES location(id)
);

CREATE TABLE IF NOT EXISTS participation_request (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created timestamp NOT NULL,
    event_id BIGINT NOT NULL,
    requester_id BIGINT NOT NULL,
    status varchar(20),
    CONSTRAINT pk_participation_request PRIMARY KEY (id),
    CONSTRAINT fk_participation_request_to_users FOREIGN KEY (requester_id) REFERENCES users(id),
    CONSTRAINT fk_participation_request_to_event FOREIGN KEY (event_id) REFERENCES event(id),
    CONSTRAINT uq_request UNIQUE (requester_id, event_id)
);

CREATE TABLE IF NOT EXISTS compilation (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	pinned boolean NOT NULL,
	title varchar(50),
	CONSTRAINT pk_compilation PRIMARY KEY (id),
	CONSTRAINT uq_compilation_name UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS compilation_list (
	compilation_id BIGINT NOT NULL,
	event_id BIGINT NOT NULL,
	CONSTRAINT fk_compilation_list_to_compilation FOREIGN KEY (compilation_id) REFERENCES compilation(id),
    CONSTRAINT fk_compilation_list_to_event FOREIGN KEY (event_id) REFERENCES event(id),
	CONSTRAINT uq_compilation UNIQUE (compilation_id, event_id)
);



